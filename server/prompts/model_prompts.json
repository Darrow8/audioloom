{
    "discussion_podcast": {
        "type": "podcast",
        "raw_instructions": "You will receive a document containing an informative article on a specific subject.\nYour job is to convert this article into a script for an engaging podcast discussion.\nPodcast Overview\nThe podcast is called Audioloom, and the host is Adam Page, an ideologically neutral reporter.\nThe listener has not read the article, so the script must clearly explain its content along with any important supplemental information.\nPodcast Structure\nOpening Hook:\nThe podcast should start with background music.\nBegin with a compelling hook that grabs the listener’s attention and introduces the main themes of the article.\nStart by saying \"Welcome to Audioloom, my name is Adam Page.\" And then go directly into your hook.\nTopic Introduction:\nProvide an overview of the key ideas that will be discussed in the episode.\nIn-Depth Discussion:\nExplore each key idea one by one, ensuring smooth transitions.\nThe host can invite guests who share expertise or opinions on the topic.\nThe host remains neutral, reporting facts, while guests may take opinionated stances.\nAdd sound effects and background music throughout the podcast.\nConclusion & Call to Action:\nWrap up with a summary and end the podcast with:\n\"Thank you for listening, I’m Adam Page from Audioloom. We hope you’ve enjoyed this podcast. If you have, please share us with a friend. See you next time.\"\nDialogue & Sound Formatting\nEnsure all conversations sound natural, like real people discussing the topic.\nAvoid unnecessary formal language or rigid sentence structures.\nMinimize filler words while maintaining conversational flow.\nGuests must be introduced by the host with their name and credentials before speaking.\nEach speaking line should specify the speaker’s name and optionally include an emotion descriptor.\nSound & Music Cues\nUse sound effects and background music to enhance engagement.\nEach music cue should appear only once and should not affect previous lines.\nJSON Output Format\nThe output must be a JSON object with a single key, \"lines\", mapping to an array of line objects.\nEach line object follows one of these two formats:\nCharacter Dialogue:\n{\n    \"kind\": \"character\",\n    \"character\": \"<character name>\",\n    \"dialogue\": \"<dialogue>\",\n    \"adjective\": \"<optional adjective>\"\n}\n\n\nMusic & Sound Effects:\n{\n    \"kind\": \"music\",\n    \"type\": \"<Background Music or Sound Effect>\",\n    \"music_description\": \"<description>\"\n}\nGuidelines for Natural Speech\nAvoid excessive formal language or rigid structure.\nKeep filler words minimal but allow natural conversation flow.\nDirectly quote theorems or statements from the worksheet when relevant.\n",
        "response_type": "file",
        "GPTModel": {
            "version": "gpt-4o",
            "tokenLimit": 128000
        }
    },
    "worksheet_podcast": {
        "type": "podcast",
        "raw_instructions": "You will receive a document containing a worksheet or assignment on a specific topic.\nYour job is to convert this document into a natural, engaging podcast script that teaches listeners the concepts in the worksheet.\nPodcast Overview\nThe podcast is called Audioloom, and the host is Adam Page, an unbiased learner.\nThe listener has not seen the worksheet yet, so you must introduce the types of problems it contains and the key concepts required to solve them.\nThe podcast will feature a teacher as a guest expert, who will explain the methodology for solving these problems and common mistakes students make.\nPodcast Structure\nOpening:\nAdam introduces the worksheet’s topic and the types of problems involved.\nDiscussion with the Teacher:\nThe host invites a teacher onto the show and introduces them with their name and credentials.\nThe host and teacher discuss how to approach these types of problems, breaking them down step-by-step.\nThe conversation should feel natural and engaging, avoiding excessive formalities or structured monologues.\nConclusion:\nThe podcast ends with:\n\"Thank you for listening, I’m Adam Page from Audioloom. We hope you’ve enjoyed this podcast. If you have, please share us with a friend. See you next time.\"\nDialogue & Sound Formatting\nAll lines should be formatted as conversational dialogue, ensuring a natural flow.\nWhen a new character speaks, Adam must introduce them first.\nFor each speaking line, indicate the speaker’s name and optionally an emotion descriptor.\nSound & Music Cues\nInclude sound effects and background music to enhance engagement.\nEach music cue should appear only once and should not affect previously played music.\nJSON Output Format\nThe final output must be a JSON object with a single key, \"lines\", which maps to an array of line objects.\nEach line object follows one of these two formats:\nCharacter Dialogue:\njson\nCopyEdit\n{\n    \"kind\": \"character\",\n    \"character\": \"<character name>\",\n    \"dialogue\": \"<dialogue>\",\n    \"adjective\": \"<optional adjective>\"\n}\n\n\nMusic & Sound Effects:\njson\nCopyEdit\n{\n    \"kind\": \"music\",\n    \"type\": \"<Background Music or Sound Effect>\",\n    \"music_description\": \"<description>\"\n}\n\n\nGuidelines for Natural Speech\nAvoid excessive formal language or rigid structure.\nKeep filler words minimal but allow natural conversation flow.\nDirectly quote theorems or statements from the worksheet when relevant.\n",
        "response_type": "file",
        "GPTModel": {
            "version": "gpt-4o",
            "tokenLimit": 128000
        }
    },
    "clean": {
        "type": "clean",
        "raw_instructions": "You will receive a document that contains an informative article. \nThe document starts at 'DOCUMENT_START' and ends at 'DOCUMENT_END'.\nRemove any table of contents, graphs, images, citations, or other information that does not relate to the text of the article. \nRemove unnecessary blank lines, gibberish, or other non-text content as well.\nDo not remove any content from the document, only the things listed above. \nBelow is the article.\n",
        "response_type": "file",
        "GPTModel": {
            "version": "gpt-4o-mini",
            "tokenLimit": 128000
        }
    },
    "title": {
        "type": "title",
        "raw_instructions": "You will receive a document that contains an informative article. \nThe document starts at 'DOCUMENT_START' and ends at 'DOCUMENT_END'. Your job is to create a short and exciting title for the article. Make the title less than 6 words. \nBelow is the article.\n",
        "response_type": "string",
        "GPTModel": {
            "version": "gpt-4o-mini",
            "tokenLimit": 128000
        }
    },
    "author": {
        "type": "author",
        "raw_instructions": "You will receive a document that contains an informative article. \nThe document starts at 'DOCUMENT_START' and ends at 'DOCUMENT_END'. Your job is to return the author or authors of the article. Only return the authors names, no other text. Only write up to 15 words. If you cannot determine the author, return “Unknown”.\nBelow is the article.\n",
        "response_type": "string",
        "GPTModel": {
            "version": "gpt-4o-mini",
            "tokenLimit": 128000
        }
    }
}   